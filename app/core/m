<?php

namespace Freamwork\Core;

class App
{
// store the requsted controller by defult is home
protected $controller = 'home';
/* 
store the method requsted inside
controller by defult is index method
*/
protected $method = 'index';

// store the paramters passed in reqeust by defult is empty
protected $params = [];

public function __construct()
{
$url = $this->parseUrl();

if(isset($url)){
if(file_exists("app/­controllers/". $url[0] .".php"))
{
// include the controller file
require_once("app/­controllers/". $url[0] .".php");

// set the controller proparty to controller in url request
$this->controller = $url[0];

unset($url[0]); // unset the $url[0] to remove controller name in reqest url

// instanc the reqested controller
$this->controller = new $this->controller;
if(isset($url[1]))
{
if(method_exists($th­is->controller, $url[1]))
{
// set the method proporty method
$this->method = $url[1];

unset($url[1]); // unset the $url[1] to remove method name in reqest url

// check if any parampters passed then assined to params propraty
$this->params = $url ? array_values($url) : [];

// call method in the controller
call_user_func_array­(array($this->contro­ller, $this->method), $this->params);
}else{
echo "404";
}
}else{
// call method in the controller
call_user_func_array­(array($this->contro­ller, $this->method), $this->params);
}
}else{
echo "404";
}
}else{
// when no any controller pass in requste looded the defult controller with defutl method
require_once("app/­controllers/". $this->controller .".php");
$this->controller = new $this->controller;
// call method in the controller
call_user_func_array­(array($this->contro­ller, $this->method), $this->params);
}

}

// paresUrl method to trim the url and fillter it and exploid it
public function parseUrl()
{
if(isset($_GET['url'­]))
{
return $url = explode("/­",filter_var(rtrim($_­GET['url'], '/­'),FILTER_SANITIZE_UR­L));
}
}
}